{"version":3,"sources":["hooks.tsx","components/hamburger.tsx","menu-slice.tsx","categories.ts","category-slice.tsx","components/menu.tsx","components/card.tsx","cards.ts","components/board.tsx","components/ToggleSwitch.tsx","components/header.tsx","board-slice.tsx","components/cat-card.tsx","components/main-board.tsx","App.tsx","store.tsx","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","Hamburger","props","onClick","setOpen","open","type","className","menuSlice","createSlice","name","initialState","index","reducers","menu","state","action","payload","actions","category","image","nameCat","map","i","categorySlice","update","Menu","ref","closeMenu","useState","dispatch","categoryIndex","node","useRef","close","handleClick","useEffect","listener","event","current","target","contains","document","addEventListener","removeEventListener","Card","src","alt","word","translation","audio","Audio","audioSrc","currentTime","play","x","y","viewBox","fill","d","cards","Board","menuIndex","cardList","Switch","id","htmlFor","Header","boardSlice","catIindex","mainBoard","CategoryCard","catName","MainBoard","mainPage","item","App","store","configureStore","reducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e3165a4e.chunk.js","sourcesContent":["import { useEffect, RefObject } from \"react\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport const useOnClickOutside = (\n  ref: RefObject<HTMLDivElement>,\n  closeMenu: () => void\n) => {\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (\n        ref.current &&\n        event.target &&\n        ref.current.contains(event.target as Node)\n      ) {\n        return;\n      }\n      closeMenu();\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n  }, [ref, closeMenu]);\n};\n","import React from 'react';\nimport './hamburger.scss';\n\nexport type Props = {\n    open: boolean;\n    setOpen: (v: boolean) => void;\n};\n\nconst Hamburger = (props: Props) => {\n\n    return (\n        <button onClick={() => props.setOpen(!props.open)} type=\"button\" className={`hamburger ${props.open ? \" opened\" : \"\"}`}> \n            <div></div>\n            <div></div>\n            <div></div>\n        </button>\n    )\n}\n\nexport default Hamburger;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface menuIndex {\n  index: number;\n};\n\nconst initialState: menuIndex = {\n  index: 0,\n};\n\nconst menuSlice = createSlice({\n    name: 'menu',\n    initialState,\n    reducers: {\n      menu(state, action: PayloadAction<number>) {\n        state.index = action.payload;\n      },\n    },\n  });\n\nexport const { menu } = menuSlice.actions;\nexport default menuSlice.reducer;\n","import { CatCard } from './components/interfaces';\n\nconst category: CatCard[] = [\n    { \n        name: 'Action (set A)',\n        image: 'img/action1.jpg' \n    },\n    { \n        name: 'Action (set B)', \n        image: 'img/action2.jpg' \n    },\n    {\n        name: 'Animal (set A)', \n        image: 'img/animal1.jpg'\n    },\n    {\n        name: 'Animal (set B)', \n        image: 'img/animal2.jpg'\n    },\n    {\n        name: 'Clothes', \n        image: 'img/clothies.jpg'\n    },\n    {\n        name: 'Emotions', \n        image: 'img/emotions.jpg'\n    },\n    {\n        name: 'Berries', \n        image: 'img/berries.jpg'\n    },\n    {\n        name: 'Airport',\n        image: 'img/airport.jpg'\n    }\n\n];\n\nexport default category;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport category from './categories';\n\nexport interface MenuList {\n  nameCat: string[]\n}\n\nconst nameArr: string[] = category.map((i) => {\n  return (i.name)\n});\n\nconst initialState: MenuList = {\n  nameCat: nameArr\n}\n\nconst categorySlice = createSlice({\n    name:  'category',\n    initialState,\n    reducers: {\n      update(state, action: PayloadAction<string[]>) {\n        state.nameCat = action.payload;\n      },\n    },\n  })\n\nexport const { update } = categorySlice.actions\nexport default categorySlice.reducer\n","import React, { useState, useRef } from \"react\";\nimport { useOnClickOutside } from \"../hooks\";\nimport './menu.scss';\nimport Hamburger from './hamburger';\nimport { useAppSelector, useAppDispatch } from '../hooks'\nimport { menu } from \"../menu-slice\";\nimport category from '../categories';\nimport { update } from '../category-slice';\n\nconst Menu: React.FC = () => {\n    const [open, setOpen] = useState(false);\n    const dispatch = useAppDispatch();\n    const categoryIndex = category.map((i) => {\n      return (i.name)\n    });\n    const node = useRef<HTMLDivElement>(null);\n    const close = () => setOpen(false);\n    \n    useOnClickOutside(node, () => setOpen(false));\n    function handleClick(i: number) {\n      dispatch(menu(i));\n    }\n    function mainClick() {\n      dispatch(update(categoryIndex));\n    }\n\n    return (\n      <div ref={node} >\n         <nav className={`menu ${open ? \" showmenu\" : \"\"}`} >\n           <li onClick={() => [close(), mainClick()]} key=\"100\">Main Page</li>\n           {categoryIndex.map((name, i) => (\n            <li onClick={() => [close(), handleClick(i)]} key={i}>{name}</li>\n           ))}\n        </nav>\n        <Hamburger open={open} setOpen={setOpen} />\n      </div>\n    );\n  };\n  \n  export default Menu;","import React from 'react';\nimport { ICard } from './interfaces';\nimport './card.scss';\n\nconst Card = (props: ICard) => {\nconst playAudio = () => {\n    const audio = new Audio(props.audioSrc);\n    if (!audio) return;\n    audio.currentTime = 0;\n    audio.play();\n}\n\n    return (\n        <div className=\"card\" key={props.word}>\n            <div className=\"card-image\">\n                <img \n                    src={props.image}\n                    alt={props.word}\n                />\n            </div>\n            <div className=\"card-descr\">\n                <div>{props.word}</div>\n                <div>{props.translation}</div>\n                <button onClick={playAudio}><svg x=\"0px\" y=\"0px\"\n                        viewBox=\"0 0 413.811 413.811\" fill=\"rgb(108, 3, 139)\" >\n                    <g>\n                        <g>\n                            <path d=\"M314.88,144.463c-2.56-2.56-5.12-5.632-8.192-8.192l-20.48,23.04c26.112,23.04,28.672,63.488,5.632,89.6\n                                c-1.536,2.048-3.584,4.096-5.632,5.632l20.48,23.04C345.6,243.279,349.696,183.887,314.88,144.463z\"/>\n                        </g>\n                    </g>\n                    <g>\n                        <g>\n                            <path d=\"M369.664,92.751c-3.584-3.584-7.168-7.168-10.752-10.24l-20.992,22.528c56.32,51.712,59.904,139.264,8.704,195.072\n                                c-2.56,3.072-5.632,5.632-8.704,8.704l20.992,22.528C427.52,268.367,432.64,161.359,369.664,92.751z\"/>\n                        </g>\n                    </g>\n                    <g>\n                        <g>\n                            <path d=\"M240.64,26.191c-5.12-2.56-11.264-2.048-15.872,1.024l-137.216,92.16H15.36c-8.704,0-15.36,6.656-15.36,15.36v144.384\n                                c0,8.704,6.656,15.36,15.36,15.36h72.192l137.216,92.16c7.168,4.608,16.384,3.072,21.504-4.096c1.536-2.56,2.56-5.632,2.56-8.704\n                                V39.503C248.832,33.871,245.76,28.751,240.64,26.191z\"/>\n                        </g>\n                    </g>\n                </svg></button>\n            </div>\n        </div>\n    )\n  }\n  \n  export default Card","import { ICard } from './components/interfaces'\n\nexport const cards: ICard[][] = [ \n    [\n      {\n        word: 'cry',\n        translation: 'плакать',\n        image: 'img/cry.jpg',\n        audioSrc: 'audio/cry.mp3'\n      },\n      {\n        word: 'dance',\n        translation: 'танцевать',\n        image: 'img/dance.jpg',\n        audioSrc: 'audio/dance.mp3'\n      },\n      {\n        word: 'dive',\n        translation: 'нырять',\n        image: 'img/dive.jpg',\n        audioSrc: 'audio/dive.mp3'\n      },\n      {\n        word: 'draw',\n        translation: 'рисовать',\n        image: 'img/draw.jpg',\n        audioSrc: 'audio/draw.mp3'\n      },\n      {\n        word: 'fish',\n        translation: 'ловить рыбу',\n        image: 'img/fish.jpg',\n        audioSrc: 'audio/fish.mp3'\n      },\n      {\n        word: 'fly',\n        translation: 'летать',\n        image: 'img/fly.jpg',\n        audioSrc: 'audio/fly.mp3'\n      },\n      {\n        word: 'hug',\n        translation: 'обнимать',\n        image: 'img/hug.jpg',\n        audioSrc: 'audio/hug.mp3'\n      },\n      {\n        word: 'jump',\n        translation: 'прыгать',\n        image: 'img/jump.jpg',\n        audioSrc: 'audio/jump.mp3'\n      }\n    ],\n    [\n      {\n        word: 'open',\n        translation: 'открывать',\n        image: 'img/open.jpg',\n        audioSrc: 'audio/open.mp3'\n      },\n      {\n        word: 'play',\n        translation: 'играть',\n        image: 'img/play.jpg',\n        audioSrc: 'audio/play.mp3'\n      },\n      {\n        word: 'point',\n        translation: 'указывать',\n        image: 'img/point.jpg',\n        audioSrc: 'audio/point.mp3'\n      },\n      {\n        word: 'ride',\n        translation: 'ездить',\n        image: 'img/ride.jpg',\n        audioSrc: 'audio/ride.mp3'\n      },\n      {\n        word: 'run',\n        translation: 'бегать',\n        image: 'img/run.jpg',\n        audioSrc: 'audio/run.mp3'\n      },\n      {\n        word: 'sing',\n        translation: 'петь',\n        image: 'img/sing.jpg',\n        audioSrc: 'audio/sing.mp3'\n      },\n      {\n        word: 'skip',\n        translation: 'пропускать, прыгать',\n        image: 'img/skip.jpg',\n        audioSrc: 'audio/skip.mp3'\n      },\n      {\n        word: 'swim',\n        translation: 'плавать',\n        image: 'img/swim.jpg',\n        audioSrc: 'audio/swim.mp3'\n      }\n    ],\n    [\n      {\n        word: 'cat',\n        translation: 'кот',\n        image: 'img/cat.jpg',\n        audioSrc: 'audio/cat.mp3'\n      },\n      {\n        word: 'chick',\n        translation: 'цыплёнок',\n        image: 'img/chick.jpg',\n        audioSrc: 'audio/chick.mp3'\n      },\n      {\n        word: 'chicken',\n        translation: 'курица',\n        image: 'img/chicken.jpg',\n        audioSrc: 'audio/chicken.mp3'\n      },\n      {\n        word: 'dog',\n        translation: 'собака',\n        image: 'img/dog.jpg',\n        audioSrc: 'audio/dog.mp3'\n      },\n      {\n        word: 'horse',\n        translation: 'лошадь',\n        image: 'img/horse.jpg',\n        audioSrc: 'audio/horse.mp3'\n      },\n      {\n        word: 'pig',\n        translation: 'свинья',\n        image: 'img/pig.jpg',\n        audioSrc: 'audio/pig.mp3'\n      },\n      {\n        word: 'rabbit',\n        translation: 'кролик',\n        image: 'img/rabbit.jpg',\n        audioSrc: 'audio/rabbit.mp3'\n      },\n      {\n        word: 'sheep',\n        translation: 'овца',\n        image: 'img/sheep.jpg',\n        audioSrc: 'audio/sheep.mp3'\n      }\n    ],\n    [\n      {\n        word: 'bird',\n        translation: 'птица',\n        image: 'img/bird.jpg',\n        audioSrc: 'audio/bird.mp3'\n      },\n      {\n        word: 'fish',\n        translation: 'рыба',\n        image: 'img/fish1.jpg',\n        audioSrc: 'audio/fish.mp3'\n      },\n      {\n        word: 'frog',\n        translation: 'жаба',\n        image: 'img/frog.jpg',\n        audioSrc: 'audio/frog.mp3'\n      },\n      {\n        word: 'giraffe',\n        translation: 'жирафа',\n        image: 'img/giraffe.jpg',\n        audioSrc: 'audio/giraffe.mp3'\n      },\n      {\n        word: 'lion',\n        translation: 'лев',\n        image: 'img/lion.jpg',\n        audioSrc: 'audio/lion.mp3'\n      },\n      {\n        word: 'mouse',\n        translation: 'мышь',\n        image: 'img/mouse.jpg',\n        audioSrc: 'audio/mouse.mp3'\n      },\n      {\n        word: 'turtle',\n        translation: 'черепаха',\n        image: 'img/turtle.jpg',\n        audioSrc: 'audio/turtle.mp3'\n      },\n      {\n        word: 'dolphin',\n        translation: 'дельфин',\n        image: 'img/dolphin.jpg',\n        audioSrc: 'audio/dolphin.mp3'\n      }\n    ],\n    [\n      {\n        word: 'skirt',\n        translation: 'юбка',\n        image: 'img/skirt.jpg',\n        audioSrc: 'audio/skirt.mp3'\n      },\n      {\n        word: 'pants',\n        translation: 'брюки',\n        image: 'img/pants.jpg',\n        audioSrc: 'audio/pants.mp3'\n      },\n      {\n        word: 'blouse',\n        translation: 'блузка',\n        image: 'img/blouse.jpg',\n        audioSrc: 'audio/blouse.mp3'\n      },\n      {\n        word: 'dress',\n        translation: 'платье',\n        image: 'img/dress.jpg',\n        audioSrc: 'audio/dress.mp3'\n      },\n      {\n        word: 'boot',\n        translation: 'ботинок',\n        image: 'img/boot.jpg',\n        audioSrc: 'audio/boot.mp3'\n      },\n      {\n        word: 'shirt',\n        translation: 'рубашка',\n        image: 'img/shirt.jpg',\n        audioSrc: 'audio/shirt.mp3'\n      },\n      {\n        word: 'coat',\n        translation: 'пальто',\n        image: 'img/coat.jpg',\n        audioSrc: 'audio/coat.mp3'\n      },\n      {\n        word: 'shoe',\n        translation: 'туфли',\n        image: 'img/shoe.jpg',\n        audioSrc: 'audio/shoe.mp3'\n      }\n    ],\n    [\n      {\n        word: 'sad',\n        translation: 'грустный',\n        image: 'img/sad.jpg',\n        audioSrc: 'audio/sad.mp3'\n      },\n      {\n        word: 'angry',\n        translation: 'сердитый',\n        image: 'img/angry.jpg',\n        audioSrc: 'audio/angry.mp3'\n      },\n      {\n        word: 'happy',\n        translation: 'счастливый',\n        image: 'img/happy.jpg',\n        audioSrc: 'audio/happy.mp3'\n      },\n      {\n        word: 'tired',\n        translation: 'уставший',\n        image: 'img/tired.jpg',\n        audioSrc: 'audio/tired.mp3'\n      },\n      {\n        word: 'surprised',\n        translation: 'удивлённый',\n        image: 'img/surprised.jpg',\n        audioSrc: 'audio/surprised.mp3'\n      },\n      {\n        word: 'scared',\n        translation: 'испуганный',\n        image: 'img/scared.jpg',\n        audioSrc: 'audio/scared.mp3'\n      },\n      {\n        word: 'smile',\n        translation: 'улыбка',\n        image: 'img/smile.jpg',\n        audioSrc: 'audio/smile.mp3'\n      },\n      {\n        word: 'laugh',\n        translation: 'смех',\n        image: 'img/laugh.jpg',\n        audioSrc: 'audio/laugh.mp3'\n      }\n    ],\n    [\n      {\n        word: 'berry',\n        translation: 'ягода',\n        image: 'img/berries.jpg',\n        audioSrc: 'audio/berry.mp3'\n      },\n      {\n        word: 'blueberry',\n        translation: 'черника',\n        image: 'img/blueberry.jpg',\n        audioSrc: 'audio/blueberry.mp3'\n      },\n      {\n        word: 'buckthorn',\n        translation: 'облепиха',\n        image: 'img/buckthorn.jpg',\n        audioSrc: 'audio/buckthorn.mp3'\n      },\n      {\n        word: 'cherry',\n        translation: 'вишня',\n        image: 'img/cherry.jpg',\n        audioSrc: 'audio/cherry.mp3'\n      },\n      {\n        word: 'currant',\n        translation: 'смородина',\n        image: 'img/currant.jpg',\n        audioSrc: 'audio/currant.mp3'\n      },\n      {\n        word: 'rowan',\n        translation: 'рябина',\n        image: 'img/rowan.jpg',\n        audioSrc: 'audio/rowan.mp3'\n      },\n      {\n        word: 'strawberry',\n        translation: 'клубника',\n        image: 'img/strawberry.jpg',\n        audioSrc: 'audio/strawberry.mp3'\n      },\n      {\n        word: 'watermelon',\n        translation: 'арбуз',\n        image: 'img/watermelon.jpg',\n        audioSrc: 'audio/watermelon.mp3'\n      }\n    ],\n    [\n      {\n        word: 'airport',\n        translation: 'аэропорт',\n        image: 'img/airport.jpg',\n        audioSrc: 'audio/airport.mp3'\n      },\n      {\n        word: 'baggage',\n        translation: 'багаж',\n        image: 'img/baggage.jpg',\n        audioSrc: 'audio/baggage.mp3'\n      },\n      {\n        word: 'customs',\n        translation: 'таможня',\n        image: 'img/customs.jpg',\n        audioSrc: 'audio/customs.mp3'\n      },\n      {\n        word: 'flight',\n        translation: 'полет',\n        image: 'img/flight.jpg',\n        audioSrc: 'audio/flight.mp3'\n      },\n      {\n        word: 'landing',\n        translation: 'посадка',\n        image: 'img/landing.jpg',\n        audioSrc: 'audio/landing.mp3'\n      },\n      {\n        word: 'passenger',\n        translation: 'пассажир',\n        image: 'img/passenger.jpg',\n        audioSrc: 'audio/passenger.mp3'\n      },\n      {\n        word: 'passport',\n        translation: 'паспорт',\n        image: 'img/passport.jpg',\n        audioSrc: 'audio/passport.mp3'\n      },\n      {\n        word: 'ticket',\n        translation: 'билет',\n        image: 'img/ticket.jpg',\n        audioSrc: 'audio/ticket.mp3'\n      }\n    ]\n  ]\n  \n  export default cards;","import React from 'react';\nimport Card from './card';\nimport './board.scss';\nimport { useAppSelector } from '../hooks';\nimport cards from '../cards';\n\nconst Board: React.FC = () => {\n  const menuIndex = useAppSelector((state) => state.menu.index);\n  const cardList = cards[menuIndex];\n\n  return (\n    <div className='container' >\n      {cardList.map((index) => (\n        <>\n        <Card \n          word={index.word}\n          translation={index.translation}\n          image={index.image}\n          audioSrc={index.audioSrc}\n          key={index.word}\n        />\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport './ToggleSwitch.scss';\n\nconst Switch = () => {\n  return (\n    <>\n      <input\n        className=\"react-switch-checkbox\"\n        id={`react-switch-new`}\n        type=\"checkbox\"\n      />\n      <label\n        className=\"react-switch-label\"\n        htmlFor={`react-switch-new`}\n      >\n        <span className={`react-switch-button`} />\n      </label>\n    </>\n  );\n};\n\nexport default Switch;\n","import React from \"react\"\nimport ToggleSwitch from './ToggleSwitch';\nimport './header.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"admin\">Admin panel</div>\n      <p>Play</p>\n      <ToggleSwitch />\n      <p>Train</p>\n\n    </header>\n  )\n}\n\nexport default Header","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface CatIndex {\n  catIindex: string;\n};\n\nconst initialState: CatIndex = {\n    catIindex: ''\n};\n\nconst boardSlice = createSlice({\n    name: 'catIndex',\n    initialState,\n    reducers: {\n      mainBoard(state, action: PayloadAction<string>) {\n        state.catIindex = action.payload;\n      },\n    },\n  });\n\nexport const { mainBoard } = boardSlice.actions;\n\nexport default boardSlice.reducer;\n","import React from 'react';\nimport { CatCard } from './interfaces';\nimport './card.scss';\nimport { useAppDispatch } from '../hooks';\nimport { mainBoard } from \"../board-slice\";\n\nconst CategoryCard = (props: CatCard) => {\n    const dispatch = useAppDispatch();\n    function handleClick(catName: string) {\n        dispatch(mainBoard(catName));\n    }\n\n    return (\n        <div className=\"card\" key={props.name} onClick={() => handleClick(props.name)}>\n            <div className=\"card-image\" >\n                <img \n                    src={props.image}\n                    alt={props.name}\n                />\n                <div>{props.name}</div>\n            </div>\n        </div>\n    )\n  }\n  \n  export default CategoryCard","import React from 'react';\nimport './board.scss';\nimport category from '../categories';\nimport CategoryCard from './cat-card';\n\nconst MainBoard: React.FC = () => {\n  const mainPage = category;\n\n  return (\n    <div className='container' >\n      {mainPage.map((item) => (\n        <>\n        <CategoryCard \n            name={item.name}\n            image={item.image}\n            \n        />\n        \n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default MainBoard;","import React from 'react';\nimport Menu from './components/menu';\nimport Board from './components/board';\nimport Header from './components/header';\nimport MainBoard from './components/main-board';\n\nconst App: React.FC = () => {\n    return (\n        <>\n        <Header />\n        <main>\n            <Menu />\n            <Board />\n            <MainBoard />\n        </main>\n        </>\n    )\n}\n\nexport default App","import categorySlice from './category-slice'\nimport menu from './menu-slice'\nimport boardSlice from './board-slice'\nimport { configureStore } from '@reduxjs/toolkit'\n\nexport const store = configureStore({\n  reducer: {\n    categorySlice,\n    menu,\n    boardSlice\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\n\nimport App from './App';\nimport { store } from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}